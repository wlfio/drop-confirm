plugins {
  id 'maven-publish'
  alias libs.plugins.quilt.loom
}

base.archivesName = project.archives_base_name
version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
  maven { url "https://maven.shedaniel.me/" }
  maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
  minecraft libs.minecraft
  mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
  modImplementation libs.quilt.loader

  modImplementation libs.quilted.fabric.api

  modApi "com.terraformersmc:modmenu:7.1.0"
  modApi("me.shedaniel.cloth:cloth-config-fabric:11.0.99") {
    exclude(group: "net.fabricmc.fabric-api")
  }
}

processResources {
  inputs.property 'version', version

  filesMatching('quilt.mod.json') {
    expand 'version': version
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.encoding = 'UTF-8'
  it.options.release = 17
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17

  withSourcesJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
  from('LICENSE') {
    rename { "${it}_${base.archivesName.get()}" }
  }
}

// Configure the maven publication
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }

  // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
  repositories {
    // Add repositories to publish to here.
    // Notice: This block does NOT have the same function as the block in the top level.
    // The repositories here will be used for publishing your artifact, not for
    // retrieving dependencies.
  }
}
